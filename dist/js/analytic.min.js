/*
 server 2016-11-09 
*/
function enableRunButton(){"button-error"==$("#start-button").attr("class")&&$("#start-button").toggleClass("button-error button-success"),$("#start-button").prop("disabled",!1)}function disableRunButton(){"button-success"==$("#start-button").attr("class")&&$("#start-button").toggleClass("button-error button-success"),$("#start-button").prop("disabled",!0)}function classifyAllData(a){$.post(web_server_address+"/classify_all",a,function(a,b){var c=a.split("\n");group_unlabeled_geojson_trajectories.clearLayers(),delete window.group_unlabeled_geojson_trajectories,delete window.unlabeled_leaflet_geojson_trajectories,trajectories_map=[],c.forEach(function(a,b,c){if(a){var d=JSON.parse(a);trajectories_map[d.tid]=createGeojsonTrajectory(d,line_layer_default_style),trajectories_map[d.tid].label=d.label}}),updateSummary(),setNextStepMessage("All trajectories were succesfully classified. For a new simulation please load a dataset."),disableRunButton(),refreshLayers(),$("#bottom-nav").hide(),$("#results-nav").show(),updateMapBounds(),createResultsCharts()})}function clearUnlabeledTrajectories(){for(var a in trajectories_map){var b=trajectories_map[a].label;"unlabeled"==b&&delete trajectories_map[a]}}function runActiveLearning(a){$.post(web_server_address+"/al_run",a,function(a,b){var c=a.split("\n");group_unlabeled_geojson_trajectories.clearLayers(),delete window.group_unlabeled_geojson_trajectories,delete window.unlabeled_leaflet_geojson_trajectories,unlabeled_items_key=[],clearUnlabeledTrajectories(),c.forEach(function(a,b,c){if(a){var d=JSON.parse(a);trajectories_map[d.tid]=createGeojsonTrajectory(d,line_layer_default_style),trajectories_map[d.tid].label="unlabeled",unlabeled_items_key.push(d.tid)}}),refreshLayers(),updateSummary(),setNextStepMessage("Please provide a label to each trajectory remaining (in red) on the map."),disableRunButton(),previous_remaining_from_budget=parseInt($("#remaining-budget").text()),updateMapBounds()})}function updateSummary(){var a=parseInt($("#nof-trajectories").text())-parseInt($("#total-labeled").text());$("#remaining").text(a);var b=parseInt($("#total-budget").val())-parseInt($("#total-labeled").text());$("#remaining-budget").text(b)}function convertObjectMapToArray(a){var b=[];for(var c in a)b.push(a[c]);return b}function setNextStepMessage(a){$("#next-step-message").fadeOut("slow"),$("#next-step-message").empty();var b=" "+a;$("#next-step-message").append(b),$("#next-step-message").fadeIn("slow").delay(2e3)}function rotate(a,b){for(;b--;){var c=a.shift();a.push(c)}return a}function createResultsCharts(){var a={},b=[],c=[],d=[],c=[],e=$("#middle-left-nav").css("height").replace("px",""),f=$("#middle-left-nav").css("width").replace("px","");console.log(f+" "+e);var g=parseFloat(f/2),h=parseFloat(e/2);console.log(g+" new "+h);for(var i in trajectories_map){var j=trajectories_map[i].label;if("unlabeled"!=j){var k=trajectories_map[i]._layers;b.hasOwnProperty(j)||(b[j]=[]),b[j].push(trajectories_map[i]);for(var l in k)if("undefined"==typeof a[j]&&(a[j]={}),k.hasOwnProperty(l)){var m=k[l].feature;for(var n in m.properties)m.properties.hasOwnProperty(n)&&("undefined"==typeof c[n]&&(c[n]=n),"undefined"==typeof a[j][i]&&(a[j][i]={}),"undefined"==typeof a[j][n]&&(a[j][i][n]={}),a[j][i][n]=m.properties[n])}}}for(var o in b)d[o]=b[o].length;$("#feature-selector").empty();for(n in c)$("#feature-selector").append("<option val='"+n+"'>"+n+"</option>");var n=$("#feature-selector option:selected").text();$("#feature-selector").change(function(){console.log("changed!");var b=$("#feature-selector option:selected").text();$("#distribution-chart").empty(),google.charts.setOnLoadCallback(drawHistogramFeaturesDistribution(a,b,g,h))}),google.charts.setOnLoadCallback(drawHistogramFeaturesDistribution(a,n,g,h)),google.charts.setOnLoadCallback(drawStackedLabelsDistribution(d,g,h+17))}function drawHistogramFeaturesDistribution(a,b,c,d){var e=[],f=[],g={},h=0,i=[];for(label in a)if(a.hasOwnProperty(label)){f.push(label),g[label]=h;var j=$("#color-"+label).val();i.push(j),h++}e.push(f);for(label in a)if(a.hasOwnProperty(label))for(tid in a[label]){for(var k=[],l=0;l<h;l++)k.push(null);var m=parseFloat(a[label][tid][b]);k[g[label]]=trunc(m),e.push(k)}var n=google.visualization.arrayToDataTable(e),o={title:"Features distribution",titleTextStyle:{fontSize:16,bold:!0},legend:{position:"none"},colors:i,interpolateNulls:!1,isStacked:!0,hAxis:{title:"Feature value"},vAxis:{title:"Number of items"},histogram:{hideBucketItems:!1}},p=new google.visualization.Histogram(document.getElementById("distribution-chart"));p.draw(n,o)}function drawStackedLabelsDistribution(a,b,c){var d=[];d.push(["Label","Number of trajectories",{role:"style"}]);for(key in a){var e=$("#color-"+key).val();d.push([key,a[key],e])}var f=google.visualization.arrayToDataTable(d),g={title:"Labels distribution",titleTextStyle:{fontSize:16,bold:!0},legend:{position:"none"},hAxis:{title:"Label name"},vAxis:{title:"Number of trajectories"}},h=new google.visualization.ColumnChart(document.getElementById("labels-distribution"));h.draw(f,g)}function setStrategy(a){$("#al-strategy-name").text(a),hide_al_dropdown()}function setClassifier(a){$("#classifier-name").text(a),hide_classifier_dropdown()}function setTopMessage(a,b){$("#alert-message-nav").empty();var c='<div class="alert '+b+'"> <span class="closebtn">&times;</span>'+a+"</div>";$("#alert-message-nav").append(c),$("#alert-message-nav").fadeIn(1e3).delay(3e3).fadeOut(1e3),$(".closebtn").click(function(){$("#alert-message-nav").hide();var a=this.parentElement;a.style.opacity="0",setTimeout(function(){a.style.display="none"},600)})}function show_classifier_dropdown(){hide_data_dropdown(),hide_al_dropdown(),document.getElementById("classifiers-dropdown").classList.remove("hide"),document.getElementById("classifiers-dropdown").classList.toggle("show")}function hide_classifier_dropdown(){document.getElementById("classifiers-dropdown").classList.remove("show"),document.getElementById("classifiers-dropdown").classList.toggle("hide")}function show_al_dropdown(){hide_data_dropdown(),hide_classifier_dropdown(),document.getElementById("al-dropdown").classList.remove("hide"),document.getElementById("al-dropdown").classList.toggle("show")}function hide_al_dropdown(){document.getElementById("al-dropdown").classList.remove("show"),document.getElementById("al-dropdown").classList.toggle("hide")}function show_data_dropdown(){hide_al_dropdown(),hide_classifier_dropdown(),document.getElementById("databases-dropdown").classList.remove("hide"),document.getElementById("databases-dropdown").classList.toggle("show")}function hide_data_dropdown(){document.getElementById("databases-dropdown").classList.remove("show"),document.getElementById("databases-dropdown").classList.toggle("hide")}function initializeMap(){return L.mapbox.tileLayer("mapbox.streets").addTo(map),map}function createLayerStyle(a){var b={color:a,weight:3,opacity:.6,fillOpacity:.2,fillColor:a};return b}function refreshLayers(){clearAllLayers();var a=[],b=[];console.log("refresh");for(var c in trajectories_map){var d=trajectories_map[c].label;"unlabeled"==d?a.push(trajectories_map[c]):(b.hasOwnProperty(d)||(b[d]=[]),b[d].push(trajectories_map[c]))}group_unlabeled_geojson_trajectories=insertTrajectoriesInMap(a,group_unlabeled_geojson_trajectories);for(var c in b){var e=$("#color-"+c).val(),f={color:e,weight:3};group_labeled_geojson_trajectories[c]=insertTrajectoriesInMap(b[c],group_labeled_geojson_trajectories[c]),group_labeled_geojson_trajectories[c].setStyle(f)}group_unlabeled_geojson_trajectories.bringToBack()}function clearAllLayers(){group_labeled_geojson_trajectories=[],map.eachLayer(function(a){map.removeLayer(a)}),map=initializeMap()}function setDefaults(){clearAllLayers(),group_unlabeled_geojson_trajectories&&delete window.group_unlabeled_geojson_trajectories,delete window.group_labeled_geojson_trajectories,delete window.labeled_trajectories,delete window.trajectories_map,delete window.al_strategy,delete window.classifier,delete window.dataset,delete window.previous_remaining_from_budget,group_labeled_geojson_trajectories=[],map_label_index={},nextIndex=0,labeled_trajectories=[],feat_selector_list=[],$("#labels-colors").empty(),$("#add-new-label").prop("disabled",!0),$("#next-trajectory").prop("disabled",!0),$("#start-button").prop("disabled",!0),$("#add-label-to-trajectory").prop("disabled",!0),document.getElementById("add-new-label").className="button-error",document.getElementById("start-button").className="button-error",document.getElementById("add-label-to-trajectory").className="button-error",$("#label-selector").find("option").remove().end(),total_bound=0,first_time=!0,$("#results-nav").hide(),$("#bottom-nav").show()}function loadDataset(a){setDefaults(),$("#feats").remove(),readGeojsonData("/data/"+a)}function readGeojsonData(a){group_unlabeled_geojson_trajectories&&group_unlabeled_geojson_trajectories.clearLayers(),jQuery.isEmptyObject(group_labeled_geojson_trajectories)&&group_labeled_geojson_trajectories.forEach(function(a,b,c){group_labeled_geojson_trajectories[b].clearLayers()}),$("#map").hide(),$("#loading").css("display","inline-block"),hide_data_dropdown(),$.get(web_server_address+a,function(a){var b=a.split("\n");trajectories_map=[],unlabeled_items_key=[],$("#nof-trajectories").text(b.length),b.forEach(function(a,b,c){if(a){var d=JSON.parse(a);trajectories_map[d.tid]=createGeojsonTrajectory(d,line_layer_default_style),trajectories_map[d.tid].label="unlabeled",unlabeled_items_key.push(d.tid)}}),refreshLayers(),$("#add-new-label").toggleClass("button-error button-success"),$("#add-new-label").prop("disabled",!1);var c="Please add at least two class labels in the Manage labels panel";setNextStepMessage(c),setTopMessage("Dataset loaded with success!","success"),$("#loading").hide(),$("#map").css("display","inline-block"),updateMapBounds()})}function insertTrajectoriesInMap(a,b){return b=L.featureGroup(a),b.addTo(map),b}function updateMapBounds(){for(key in trajectories_map)if(group=trajectories_map[key],"undefined"==typeof total_bound||0==total_bound)total_bound=group.getBounds(),map.fitBounds(total_bound);else{var a=total_bound.extend(group.getBounds());map.fitBounds(a)}}function createGeojsonTrajectory(a,b){var c=L.geoJson(a,b);return c.on("click",function(a){showTrajectoryFeatures(a);var b=L.featureGroup([this]);b.addTo(map),map.fitBounds(b.getBounds())}),c}function unselectTrajectory(a){a.options.fillOpacity=.2,a.options.weight=3,a.setStyle(a.options)}function showTrajectoryFeatures(a){$("#feats").remove();var b;if(console.log(a),"undefined"==typeof a.layer){var c=a.target._layers;for(f in c)b=c[f];console.log("opa")}else b=a.layer;console.log(b);var d=$("#features-tbl"),e=$("<nav id='feats'>");e.addClass("features-tbl"),e.append("<dl id='tid' tid_val="+b.feature.tid+' class="inline">tid: <dt>'+b.feature.tid+"</dt></dl>");for(var f in b.feature.properties)e.append('<dl class="inline">'+f+": <dt>"+trunc(b.feature.properties[f])+"</dt></dl>");d.append(e)}function trunc(a){return Math.floor(100*a)/100}$("#add-new-label").click(function(a){a.preventDefault();var b=$("#label-txt").val().split(" ").join("-");if(!b){var c="Error! Please add a name to the label.";return void setTopMessage(c,"error")}if(0==$("#label-selector option[val='"+b+"']").length){$("#label-selector").append("<option val='"+b+"'>"+b+"</option>"),$("#label-txt").val("");var c="Success! Label added to the list.";setTopMessage(c,"success"),$("#label-selector option").size()>=2&&("button-error"==$("#add-label-to-trajectory").attr("class")&&$("#add-label-to-trajectory").toggleClass("button-error button-success"),$("#add-label-to-trajectory").prop("disabled",!1),"button-error"==$("#next-trajectory").attr("class")&&$("#next-trajectory").toggleClass("button-error button-success"),$("#next-trajectory").prop("disabled",!1),setNextStepMessage("Please add a label to at least two trajectories."));var d=layer_colors[$("#label-selector option").size()-1],e="color-"+b,f="<dl><b>"+b+":</b><input id="+e+' type="color" name="favcolor" value="'+d+'"></dl>';$("#labels-colors").append(f),$("#"+e).change(function(){var a=createLayerStyle($("#"+e).val());group_labeled_geojson_trajectories[b].setStyle(a)})}else{var c="Error! Label <u>"+b+"</u> is already in the list.";setTopMessage(c,"error")}}),$("#start-button").click(function(){var a=parseInt($("#remaining-budget").text());$("#time-step").prop("disabled",!0),$("#total-budget").prop("disabled",!0);var b={};al_strategy?b.strategy=al_strategy:b.strategy="Random Sampling",classifier?b.classifier=classifier:b.classifier="Logistic Regression",b.dataset=dataset;var c=parseInt($("#remaining-budget").text()),d=parseInt($("#time-step").val());first_time?(b.time_step=d,first_time=!1):c-d>=0?b.time_step=d:b.time_step=c,b.labeled_trajectories=convertObjectMapToArray(labeled_trajectories),b=JSON.stringify(b),0==a?(b.classify_all=!0,classifyAllData(b)):(b.classify_all=!1,runActiveLearning(b))}),$("#unlabeled-color").change(function(){var a=createLayerStyle($("#unlabeled-color").val());group_unlabeled_geojson_trajectories.setStyle(a),group_unlabeled_geojson_trajectories.bringToBack()}),setNextStepMessage("Please select a database!");var selected_item_key;$("#next-trajectory").click(function(a){return a.preventDefault(),"undefined"==selected_item_key?0:(unlabeled_items_key=rotate(unlabeled_items_key,1),void trajectories_map[unlabeled_items_key[0]].fire("click"))}),$("#add-label-to-trajectory").click(function(a){a.preventDefault();var b=$("#tid")[0].attributes.tid_val.value,c=$("#label-selector option:selected").text(),d={};map_label_index.hasOwnProperty(c)||(map_label_index[c]=nextIndex,nextIndex++),d.tid=Number(b),d.label_value=c,labeled_trajectories[b]=d;var e=createLayerStyle($("#color-"+c).val());trajectories_map[d.tid].label=c,refreshLayers(),group_labeled_geojson_trajectories[c].setStyle(e);var f=Object.keys(labeled_trajectories).length;$("#total-labeled").text(f),nextIndex>1&&first_time&&(enableRunButton(),setNextStepMessage("Click on the run button in the Active Learning panel to start.")),updateSummary();var g=previous_remaining_from_budget-parseInt($("#time-step").val()),h=parseInt($("#remaining-budget").text());first_time||(g==parseInt($("#remaining-budget").text())?(enableRunButton(),setNextStepMessage("Click on the run button in the Active Learning panel.")):0==h&&(enableRunButton(),setNextStepMessage("Click on the run button to classify all trajectories."))),setTopMessage("Label <b>"+c+"</b> succesfully added to trajectory id (tid) <b>"+b+"</b>","success"),$("#next-trajectory").click()}),google.charts.load("current",{packages:["corechart","bar"]});var values_by_label_and_feature=[];google.charts.load("current",{packages:["corechart","bar"]}),$(window).resize(function(){labeled_trajectories.length>1&&createResultsCharts()}),$("#rnd").click(function(){al_strategy="Random Sampling",setStrategy(al_strategy)}),$("#unc").click(function(){al_strategy="Uncertain Sampling",setStrategy(al_strategy)}),$("#qbc").click(function(){al_strategy="Query-by-committee",setStrategy(al_strategy)}),$("#lr").click(function(){classifier="Logistic Regression",setClassifier(classifier)}),$("#gnb").click(function(){classifier="Gaussian Naive Bayes",setClassifier(classifier)}),$("#dt").click(function(){classifier="Decision Tree",setClassifier(classifier)}),$("#knn").click(function(){classifier="KNN",setClassifier(classifier)}),$("#ab").click(function(){classifier="Ada Boost",setClassifier(classifier)}),$("#rf").click(function(){classifier="Random Forest",setClassifier(classifier)}),$("#fishing").click(function(){dataset="fishing",loadDataset(dataset)}),$("#geolife").click(function(){dataset="geolife",loadDataset(dataset)}),$("#hurricanes").click(function(){dataset="hurricanes",loadDataset(dataset)}),$("#load-data").click(function(){show_data_dropdown()}),$("#al-strategy").click(function(){show_al_dropdown()}),$("#classifier").click(function(){show_classifier_dropdown()});var trajectories_map,al_strategy,classifier,dataset,group_unlabeled_geojson_trajectories,previous_remaining_from_budget,total_bound=0,first_time=!0,group_labeled_geojson_trajectories=[],unlabeled_items_key=[],map_label_index={},nextIndex=0,labeled_trajectories=[],web_server_address="http://127.0.0.1:8080",default_unlabeled_color="#FF0000",line_layer_default_style=createLayerStyle(default_unlabeled_color),layer_colors=[];layer_colors.push("#00FF00","#0000FF","#FFFF00","#00FFFF","#FF00FF"),L.mapbox.accessToken="pk.eyJ1IjoiYW1pbGNhcnNqIiwiYSI6ImNpdHAyODc2cDAwM2ozM21vZGQwMnUxNmYifQ.kxDj2-uHVNpfIuZVuJ-1FQ";var map=L.mapbox.map("map","mapbox.streets").setView([0,0],2);map=initializeMap(),$("#results-nav").hide(),window.File&&window.FileReader&&window.FileList&&window.Blob||alert("The File APIs are not fully supported in this browser.");